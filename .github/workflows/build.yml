name: Buil Test Pipeline

on:
  push:
    branches: 
      - "**"  
  pull_request:
    branches: 
      - "**"  
  workflow_dispatch: 

jobs:
  backend:
    name: Backend - Build & Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testdb
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --host=localhost --user=root --password=root" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print Repository Structure
        run: ls -R

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json 
        
      - name: Install Dependencies
        run: npm ci
        working-directory: backend
      
      - name: Create Test Database (If Not Created)
        run: mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS demotest;"
        
      - name: Create Test Database (If Not Created)
        run: mysql -h 127.0.0.1 -u root -proot -e "CREATE DATABASE IF NOT EXISTS demo;"

      - name: Run Tests
        run: npm test
        working-directory: backend

      - name: Generate Coverage Report
        run: |
          npm run test -- --coverage
          ls -la coverage
        working-directory: backend

      # - name: Upload Coverage Report as Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: backend-coverage-report
      #     path: backend/coverage/lcov-report/

      # - name: Run SonarQube Analysis
      #   run: |
      #     npx sonarqube-scanner \
      #       -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
      #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      #   env:
      #     SONAR_SCANNER_OPTS: "-Dsonar.sources=backend -Dsonar.exclusions=**/node_modules/**"

  frontend:
    name: Frontend - Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json 

      - name: Install Dependencies
        run: npm ci
        working-directory: frontend

      - name: Build Frontend
        run: npm run build
        working-directory: frontend

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/
