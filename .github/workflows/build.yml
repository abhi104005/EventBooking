name: Buil Test Pipeline

on:
  push:
    branches: 
      - "**"  
  pull_request:
    branches: 
      - "**"  
  workflow_dispatch: 

jobs:
  backend:
    name: Backend - Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Print Repository Structure
        run: ls -R

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json 

      - name: Install Dependencies
        run: npm ci
        working-directory: backend

      - name: Build Backend
        run: npm run build  
        working-directory: backend

      - name: Run Tests
        run: npm test

      - name: Generate Coverage Report
        run: |
          npm run test -- --coverage
          ls -la coverage

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: backend/coverage/lcov-report/

      - name: Run SonarQube Analysis
        run: |
          npx sonarqube-scanner \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_SCANNER_OPTS: "-Dsonar.sources=backend -Dsonar.exclusions=**/node_modules/**"

  frontend:
    name: Frontend - Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json 

      - name: Install Dependencies
        run: npm ci
        working-directory: backend

      - name: Build Frontend
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/
